{
  "version": 3,
  "sources": [
    "..\\node_modules\\browser-pack\\_prelude.js",
    "index.ts",
    "util.ts",
    "..\\package.json"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import P2P, {EventNames} from '..'\r\nimport {name as pkgName, version as pkgVersion} from '../package.json'\r\nimport {log} from './util'\r\n\r\nconst lobbyBtn = document.getElementById('joinLobby')! as HTMLButtonElement\r\n\r\nlobbyBtn.addEventListener('click', async e => {\r\n    const input = document.getElementById('name')! as HTMLInputElement\r\n    if(input.value.trim().length < 2)\r\n        return\r\n\r\n    lobbyBtn.disabled = true\r\n\r\n    log('Creating Node')\r\n    const node = new P2P(input.value.trim(), `my-demo-${pkgName}@${pkgVersion}`, {allowSameBrowser: true})\r\n    node.on(EventNames.error, log)\r\n    node.on(EventNames.peerJoin, peerID => log(`Welcome ${node.peers.get(peerID)}`))\r\n    node.on(EventNames.peerLeft, peerID => log(`See ya ${node.peers.get(peerID)}`))\r\n\r\n    log('Joining Lobby')\r\n    await node.joinLobby()\r\n\r\n    log(node.name, 'is in the lobby')\r\n})\r\n\r\nlog('All entries are logged here')",
    "const messagesList = document.getElementById('messages')! as HTMLUListElement\r\nlet lastLogTime = Date.now()\r\n\r\nexport function log(...args: any[]) {\r\n    const li = document.createElement('li')\r\n    let str: string[] = []\r\n    for(const arg of args) {\r\n        if (typeof arg == 'string')\r\n            str.push(arg)\r\n\r\n        else if (arg instanceof Error)\r\n            str.push(`<b>ERROR ${arg.name}</b> ${arg.message} <pre>${arg.stack}</pre>`)\r\n\r\n        else\r\n            str.push(`<pre>${JSON.stringify(arg, null, 2)}</pre>`)\r\n    }\r\n    li.innerHTML = str.join(' ')\r\n    li.title = `+${Date.now() - lastLogTime}ms later @ ${Date().toString()}`\r\n    lastLogTime = Date.now()\r\n    messagesList.appendChild(li)\r\n}\r\n",
    "module.exports={\n  \"name\": \"p2p-lobby\",\n  \"version\": \"0.0.6\",\n  \"description\": \"A type safe lobby system built on IPFS\",\n  \"scripts\": {\n    \"bundle\": \"simplifyify index.ts -s p2p -o dist/bundle.js --debug --bundle\",\n    \"optimize\": \"simplifyify index.ts -s p2p -o dist/bundle.js --minify\",\n    \"build\": \"simplifyify index.ts -s p2p -o dist/bundle.js --debug --bundle --minify\",\n    \"demo\": \"simplifyify demo/index.ts   -o demo/bundle.js --debug --bundle\",\n    \"test\": \"ts-mocha test/*.ts\",\n    \"prepare\": \"npm test && npm run build && npm run demo && rimraf dist/package.json\",\n    \"publish-please\": \"publish-please\",\n    \"prepublishOnly\": \"publish-please guard\"\n  },\n  \"files\": [\n    \"dist/\"\n  ],\n  \"dependencies\": {\n    \"ipfs\": \"^0.32.3\",\n    \"ipfs-repo\": \"^0.24.0\",\n    \"msgpack-lite\": \"^0.1.26\"\n  },\n  \"devDependencies\": {\n    \"@types/events\": \"^1.2.0\",\n    \"@types/mocha\": \"^5.2.5\",\n    \"@types/msgpack-lite\": \"^0.1.6\",\n    \"@types/node\": \"^10.11.4\",\n    \"@types/should\": \"^13.0.0\",\n    \"browserify\": \"^16.2.3\",\n    \"browserify-shim\": \"^3.8.14\",\n    \"mocha\": \"^5.2.0\",\n    \"publish-please\": \"^5.1.1\",\n    \"rimraf\": \"^2.6.2\",\n    \"should\": \"^13.2.3\",\n    \"simplifyify\": \"^7.0.0\",\n    \"strict-event-emitter-types\": \"^2.0.0\",\n    \"ts-mocha\": \"^2.0.0\",\n    \"typescript\": \"^3.1.1\"\n  },\n  \"browserify\": {\n    \"transform\": [\n      \"browserify-shim\"\n    ]\n  },\n  \"browserify-shim\": {\n    \"..\": \"global:p2p\"\n  }\n}\n"
  ]
}